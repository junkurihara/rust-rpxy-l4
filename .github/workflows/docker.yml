name: Build and Push Docker Image
on:
  push:
    branches:
      - "develop"
  pull_request:
    types: [closed]
    branches:
      - main

env:
  GHCR: ghcr.io
  GHCR_IMAGE_NAME: ${{ github.repository }}
  DH_REGISTRY_NAME: jqtype/rpxy-l4

jobs:
  build_and_push:
    runs-on: ubuntu-22.04
    if: ${{ github.event_name == 'push' }} || ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == true }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: "default"
            dockerfile: ./docker/Dockerfile
            platforms: linux/amd64,linux/arm64
            # Aliases must be used only for release builds
            aliases: |
              jqtype/rpxy-l4:latest
              ghcr.io/junkurihara/rust-rpxy-l4:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GHCR }}/${{ env.GHCR_IMAGE_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Nightly build and push from develop branch
        if: ${{ (github.ref_name == 'develop') && (github.event_name == 'push') }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.DH_REGISTRY_NAME }}:nightly
            ${{ env.GHCR }}/${{ env.GHCR_IMAGE_NAME }}:nightly
          file: ${{ matrix.dockerfile }}
          cache-from: type=gha,scope=rpxy-l4-nightly-${{ matrix.target }}
          cache-to: type=gha,mode=max,scope=rpxy-l4-nightly-${{ matrix.target }}
          platforms: ${{ matrix.platforms }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: check pull_request title
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref == 'develop' && github.event.pull_request.base.ref == 'main' && github.event.pull_request.merged == true }}
        uses: kaisugi/action-regex-match@v1.0.1
        id: regex-match
        with:
          text: ${{ github.event.pull_request.title }}
          regex: "^(\\d+\\.\\d+\\.\\d+)$"

      - name: Release build and push from main branch
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref == 'develop' && github.event.pull_request.base.ref == 'main' && github.event.pull_request.merged == true }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.GHCR }}/${{ env.GHCR_IMAGE_NAME }}:latest
            ${{ env.DH_REGISTRY_NAME }}:latest
            ${{ matrix.aliases }}
            ${{ env.GHCR }}/${{ env.GHCR_IMAGE_NAME }}:${{ github.event.pull_request.title }}
            ${{ env.DH_REGISTRY_NAME }}:${{ github.event.pull_request.title }}
          file: ${{ matrix.dockerfile }}
          cache-from: type=gha,scope=rpxy-l4-latest-${{ matrix.target }}
          cache-to: type=gha,mode=max,scope=rpxy-l4-latest-${{ matrix.target }}
          platforms: ${{ matrix.platforms }}
          labels: ${{ steps.meta.outputs.labels }}

  dispatch_release_event:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref == 'develop' && github.event.pull_request.base.ref == 'main' && github.event.pull_request.merged == true }}
    needs: build_and_push
    steps:
      - name: Repository dispatch for release
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: release-event
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "pull_request": { "title": "${{ github.event.pull_request.title }}", "body": ${{ toJson(github.event.pull_request.body) }}, "number": "${{ github.event.pull_request.number }}", "head": "${{ github.event.pull_request.head.ref }}", "base": "${{ github.event.pull_request.base.ref}}"}}'
