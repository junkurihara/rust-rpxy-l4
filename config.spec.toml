##############################################
#   Configuration specification of rpxy-L4   #
##############################################

###################
# Global settings #
###################

# Listen port, must be set
# TODO: Is it nice to have multiple listen ports?
listen_port = 8448

# (Optional) Listen [::], [default: false]
listen_ipv6 = true

# (Optional) TCP backlog size [default: 1024]
tcp_backlog = 1024

# (Optional) Maximum TCP connections [default: 1024]
tcp_max_connections = 1024

# (Optional) Maximum UDP connections [default: 2048]
udp_max_connections = 2048

# (Optional) Default targets for TCP connections. [default: empty]
# If specified, connections that are not detected as specified protocols will be forwarded to these targets.
# Otherwise, only specified protocols pass through and others are dropped.
# Format: ["<ip|domain>:<port>", "<ip|domain>:<port>", ...]
tcp_target = ["192.168.122.4:53"] # ip:port or domain:port

# (Optional) Load balancing method for default targets [default: none]
# - source_ip: based on source IP hash
# - source_socket: based on source IP and port hash
# - random: random selection
# - none: always use the first target
tcp_load_balance = "source_ip" # source_ip, source_socket, random, or none

# (Optional) Default targets for UDP connections. [default: empty]
udp_target = ["192.168.122.4:53"] # ip:port or domain:port

# (Optional) Load balancing method for default targets [default: none]
udp_load_balance = "source_ip"

# (Optional) Udp connection idle lifetime in seconds [default: 30]
udp_idle_lifetime = 30

# (Optional) DNS cache minimum TTL in duration format (e.g., "30s", "1m", "1h") [default: 30s]
# This sets the minimum time resolved DNS records are cached, even if the DNS response
# specifies a shorter TTL.
dns_cache_min_ttl = "30s"

# (Optional) DNS cache maximum TTL in duration format [default: 1h]
# This sets the maximum time resolved DNS records are cached, even if the DNS response
# specifies a longer TTL.
dns_cache_max_ttl = "1h"

#########################
# Per-protocol settings #
#########################
[protocols]

# Note that multiple entries with `protocols = "tls"` or `"quic"` can be configured.
# On the other hand, only one entry with `protocols = "ssh"`, `"http"`, or `"wireguard"` can be configured.

#########################
### Example for TLS
[protocols."tls_1"]
# Name of protocol tls|ssh|http|wireguard|quic
protocol = "tls"

# Target for connections detected as the `protocol`.
target = ["192.168.122.4:443"] # ip:port or domain:port

# (Optional) Load balancing method specific to this connections [default: none]
load_balance = "source_ip"


#########################
### Example for TLS with SNI routing
[protocols."tls_2"]
protocol = "tls"
target = ["192.168.122.5:443"] # ip:port or domain:port
load_balance = "source_ip"

# (Optional) SNI-based routing for TLS/QUIC connections, only valid when `protocol = "tls"` or `"quic"`.
# If specified, only TLS/QUIC connections matched to the given SNI(s) are forwarded to the target.
# Format: ["<server_name>", "<server_name>", ...]
server_names = ["example.com", "example.org"]

#########################
### Example for TLS with SNI routing
[protocols."tls_3"]
protocol = "tls"
target = ["192.168.122.6:443"] # ip:port or domain:port
load_balance = "source_ip"

# (Optional) ALPN-based routing for TLS/QUIC connections, only valid when `protocol = "tls"` or `"quic"`.
# If specified, only TLS/QUIC connections matched to the given ALPN(s) are forwarded to the target.
# Format: ["<alpn>", "<alpn>", ...]
alpns = ["h2", "http/1.1"]

# NOTE: If both `server_names` and `alpns` are specified, the proxy forwards connections that match simultaneously both of them.

#########################
### Example for TLS with ECH support
[protocols."tls_4"]
protocol = "tls"
target = [
  "192.168.122.7:443",
  "my-private-backend.example.com:443",
] # ip:port or domain:port
load_balance = "source_ip"
# (Optional) If specified, TLS connection with SNI in the intersection of `server_names` and [`ech_config.content.public_name`] are evaluated.
# In other words, even if not specified, allowed public names in ech config are only evaluated and possibly passed to the target.
# This should be specified if the target is not the same as the public name in the ECH config.
server_names = ["my-public-name.example.com"]

# (Optional) Support for encrypted client hello (ECH) for TLS connections, only valid when `protocol = "tls"` or `"quic"` and `server_name` is set.
# If specified, the proxy will attempt to decrypt the encrypted InnerClientHello contained in the OuterClientHello matched to the SNI-matched connections.
# For instance, when TLS ClientHello with SNI "example.net" (Outer) is given, the proxy will decrypts the encrypted part of the ClientHello (Inner).
# Then it forwards the plaintext ClientHello to the target. Only when given ech_config.server_names matches the SNI of inner client hello, the connection is passed to the target.
# If decryption fails (e.g. the ECHConfigList is not matched to the OuterClientHello), the connection simply be passed to the target with no modification.
[protocols."tls_4".ech]
# ECHConfigList for the server, base64 encoded.
ech_config_list = "<base64 encoded ECHConfigList>"
# Private keys for ECH decryption, matched to entries in ech_config_list.
private_keys = ["<base64 encoded private key>"]

# (Optional) Private server names that only be routed after ECH decryption towards the target address
private_server_names = [
  "my-private-backend.example.com",
] # TODO: not implemented


#########################
### Example for QUIC
[protocols."quic"]
# Name of protocol tls|ssh|http|wireguard|quic
protocol = "quic"

# Target for connections detected as QUIC.
target = ["192.168.122.4:443"]

# Load balancing method for QUIC connections [default: none]
load_balance = "source_ip"

# (Optional) Idle lifetime for QUIC connections in seconds [default: 30]
idle_lifetime = 30

# server_names = ["example.com", "example.org"]
# ech = { private_keys = ["/path/to/private.key"], server_names = ["example.org"] }

#########################
### Example for SSH
[protocols."ssh"]
# Name of protocol tls|ssh|http|wireguard|quic
protocol = "ssh"

# Target for connections detected as SSH.
target = ["192.168.122.4:22"]

# Load balancing method for SSH connections [default: none]
load_balance = "source_ip"


# #################################
# #      Experimental setting     #
# #################################
# [experimental]


################################################################################################
# NOT IMPLEMENTED JUST AN IDEA
# # (Optional) Acceptable incoming ports for this protocol [default: same as `listen_ports`]
# # If not specified, all TCP or UDP connections through `listen_ports` are probed for the specified protocol.
# # If specified, only connections through the specified ports are probed.
# listen_ports = [50443]
